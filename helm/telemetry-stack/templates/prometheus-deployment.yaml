{{- if .Values.prometheus.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  labels:
    app: prometheus
    {{- include "telemetry-stack.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
      {{- include "telemetry-stack.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: prometheus
        {{- include "telemetry-stack.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "telemetry-stack.fullname" . }}-prometheus
      containers:
      - name: prometheus
        image: prom/prometheus:v2.45.0
        args:
          - '--config.file=/etc/prometheus/prometheus.yml'
          - '--storage.tsdb.path=/prometheus/'
          - '--web.console.libraries=/etc/prometheus/console_libraries'
          - '--web.console.templates=/etc/prometheus/consoles'
          - '--storage.tsdb.retention.time=15d'
          - '--web.enable-lifecycle'
          - '--web.enable-admin-api'
        ports:
        - containerPort: 9090
          name: prometheus
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus/
        - name: prometheus-storage
          mountPath: /prometheus/
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          initialDelaySeconds: 30
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: prometheus-config
        configMap:
          name: {{ include "telemetry-stack.fullname" . }}-prometheus-config
      - name: prometheus-storage
        {{- if .Values.prometheus.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ include "telemetry-stack.fullname" . }}-prometheus-pvc
        {{- else }}
        emptyDir: {}
        {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  labels:
    app: prometheus
    {{- include "telemetry-stack.labels" . | nindent 4 }}
spec:
  selector:
    app: prometheus
    {{- include "telemetry-stack.selectorLabels" . | nindent 4 }}
  ports:
  - name: prometheus
    port: 9090
    targetPort: 9090
    protocol: TCP
  type: ClusterIP
---
{{- if .Values.prometheus.persistence.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "telemetry-stack.fullname" . }}-prometheus-pvc
  labels:
    app: prometheus
    {{- include "telemetry-stack.labels" . | nindent 4 }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.prometheus.persistence.size }}
  {{- if .Values.prometheus.persistence.storageClass }}
  storageClassName: {{ .Values.prometheus.persistence.storageClass }}
  {{- end }}
{{- end }}
{{- end }}
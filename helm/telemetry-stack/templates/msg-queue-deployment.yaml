{{- if and .Values.msgQueue.enabled (not .Values.msgQueue.useStatefulSet) }}
{{- if and .Values.msgQueue.persistence.enabled (eq (.Values.msgQueue.replicaCount | int) 1) }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: msg-queue-pvc
  labels:
    app: {{ .Values.msgQueue.name }}
    chart: {{ include "telemetry-stack.chart" . }}
    release: {{ .Release.Name }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.msgQueue.persistence.size }}
---
{{- end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.msgQueue.name }}
  labels:
    app: {{ .Values.msgQueue.name }}
    chart: {{ include "telemetry-stack.chart" . }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.msgQueue.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.msgQueue.name }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Values.msgQueue.name }}
        release: {{ .Release.Name }}
    spec:
      containers:
      - name: {{ .Values.msgQueue.name }}
        image: "{{ .Values.msgQueue.image.repository }}:{{ .Values.msgQueue.image.tag }}"
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        ports:
        - containerPort: {{ .Values.msgQueue.service.port }}
        env:
        - name: PORT
          value: {{ .Values.msgQueue.service.port | quote }}
        - name: BROKER_INDEX
          value: {{ .Values.msgQueue.env.brokerIndex | quote }}
        - name: BROKER_COUNT
          value: {{ .Values.msgQueue.env.brokerCount | quote }}
        - name: TOPICS
          value: {{ .Values.msgQueue.env.topics | quote }}
        # Add health checks
        readinessProbe:
          httpGet:
            path: /topics
            port: {{ .Values.msgQueue.service.port }}
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /topics
            port: {{ .Values.msgQueue.service.port }}
          initialDelaySeconds: 15
          periodSeconds: 20
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        {{- if and .Values.msgQueue.persistence.enabled (eq (.Values.msgQueue.replicaCount | int) 1) }}
        volumeMounts:
        - name: msg-queue-storage
          mountPath: /root/data
        {{- end }}
      {{- if and .Values.msgQueue.persistence.enabled (eq (.Values.msgQueue.replicaCount | int) 1) }}
      volumes:
      - name: msg-queue-storage
        persistentVolumeClaim:
          claimName: msg-queue-pvc
      {{- end }}
{{- end }}